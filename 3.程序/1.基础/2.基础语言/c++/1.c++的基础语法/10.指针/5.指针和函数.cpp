/**
 * 1.指针形参
 * 函数参数定义为指针，此时向函数传入的就是内存地址
 * 
 * 注意！！：指针参数如果做赋值等操作，会影响到传入前的变量
 * 
 * 常用：可以用指针作为回调 ，类似java中的回调类
 * 
 * 2.函数指针
 * 函数名其实是一个指向可执行代码段的内存首地址，所以我们可以设定一个指针来接收函数地址。
 * 
 * 声明函数指针类型：返回值类型 (*指针名)(函数参数类型列表)
 * 
 * 用途：如果有多种相似不同名函数，可以用函数指针作为变量进行运算。
*/
#include <iostream>
using namespace std;

//这里i j 都是指针，所以对其操作就是相应的内存地址的操作。注意，内存地址操作会影响到外部变量
void fun(int *i,int *j){
    *i = 10;//这里解引用，获取到外部变量a，对a赋值，main函数中的a的值也会变
    *j = 20;
}

/**
 * 函数指针
*/
void testFunPoint(){
    //我们设定一个函数指针，指向上面的fun函数
    void (*pFun)(int* ,int*);//这就是个函数的指针
    pFun = fun;//pFun最终指向fun，运行时就会使用fun内部逻辑进行运算，这也是函数指针最大的用途

    int a = 1;
    int b = 2;
    //使用函数指针,用法与原函数相同
    pFun(&a,&b);
}

int main(){
    int a = 1;
    int b = 2;
    fun(&a,&b);

    cout<<a<<endl;//输出10
}